@startuml
!include style.puml
skinparam arrowThickness 1.1
skinparam arrowColor LOGIC_COLOR_T1
skinparam classBackgroundColor LOGIC_COLOR
skinparam classBorderColor LOGIC_COLOR_T1

package Logic {

package Parser {
Interface Parser <<Interface>>
Class StudyBananasParser
Class FlashcardParser
Class QuizParser
Class ScheduleParser
Class GeneralParser
Class XYZCommandParser
}

package Command {
Class XYZCommand
Class CommandResult
Class "{abstract}\nCommand" as Command
}

Interface Logic <<Interface>>
Class LogicManager
}

package Model{
Class HiddenModel #FFFFFF
}

Class HiddenOutside #FFFFFF
HiddenOutside ..> Logic

LogicManager .up.|> Logic
LogicManager -->"1" StudyBananasParser
StudyBananasParser ..> FlashcardParser
StudyBananasParser ..> ScheduleParser
StudyBananasParser ..> QuizParser
StudyBananasParser ..> GeneralParser
FlashcardParser ..|> Parser
ScheduleParser ..|> Parser
QuizParser ..|> Parser
GeneralParser ..|> Parser
FlashcardParser ..> XYZCommandParser : creates >
ScheduleParser ..> XYZCommandParser : creates >
QuizParser ..> XYZCommandParser : creates >
GeneralParser ..> XYZCommandParser : creates >
XYZCommandParser ..> XYZCommand : creates >
XYZCommandParser ..|> Parser
XYZCommand -up-|> Command
LogicManager .left.> Command : executes >

LogicManager --> Model
Command .right.> Model
note right of XYZCommand LOGIC_COLOR: XYZCommand = AddTaskCommand, \nQuizCommand, etc

Logic ..> CommandResult
LogicManager .down.> CommandResult
Command .up.> CommandResult
CommandResult -[hidden]-> Parser
@enduml
